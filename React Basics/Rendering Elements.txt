----------------------------------------------------
An element describes what you want to see on the screen.
Ex: const element = <h1>Hello, world</h1>;
----------------------------------------------------
Elements are what components are “made of”.
----------------------------------------------------
To render a element in React use ReactDOM.render(); .
Ex: const element = <h1>Hello, world</h1>;
ReactDOM.render(element, document.getElementById('root'));
----------------------------------------------------
In the HTMl file there will be a tag with an Id, like id="root". And on the ReactDOM.render() you will say what you want to render and where.
Ex: ReactDOM.render(<App />, document.getElementById('root'));
----------------------------------------------------
React elements are immutable(não mudam). Once you create an element, you can’t change its children or attributes. 
----------------------------------------------------
The setInterval() method repeatedly calls a function or executes a 
code snippet, with a fixed time delay between each call. 
Ex: setInterval(element, 1000);
----------------------------------------------------
Use clearInterval() to remove an setInternal after is rendered.
----------------------------------------------------
Another way to update an already rendered element, is to use the setInterval() function.
Ex: function tick() {
  const element = (
    <div>
      <h1>Hello, world!</h1>
      <h2>It is {new Date().toLocaleTimeString()}.</h2>
    </div>
  );
  ReactDOM.render(element, document.getElementById('root'));
}

setInterval(tick, 1000); 
----------------------------------------------------
It is better to use the State method to rerender an element.
----------------------------------------------------
React updates only what is necessary.
----------------------------------------------------